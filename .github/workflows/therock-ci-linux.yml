name: TheRock CI Linux

on:
  workflow_call:
    inputs:
      amdgpu_families:
        type: string
      extra_cmake_options:
        type: string

permissions:
  contents: read

jobs:
  therock-build-linux:
    name: Build Linux Packages
    runs-on: azure-linux-scale-rocm
    permissions:
      id-token: write
    container:
      image: ghcr.io/rocm/therock_build_manylinux_x86_64@sha256:283673fe3e1bf498d079e3f386b794af1b4f71845a9a0107c6cf7aa304dce050
      options: -v /runner/config:/home/awsconfig/
    env:
      AMDGPU_FAMILIES: ${{ inputs.amdgpu_families }}
      TEATIME_FORCE_INTERACTIVE: 0
      AWS_SHARED_CREDENTIALS_FILE: /home/awsconfig/credentials.ini
    steps:
      - name: Checkout TheRock repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: "ROCm/TheRock"
          ref: 16ee54fb580a4dde62dc4133f978e73370a545af

      - name: Checkout rccl repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: "ROCm/rccl"
          path: rccl

      - name: Checkout rccl-tests repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: "ROCm/rccl-tests"
          path: rccl-tests

      - name: Runner Health Settings
        run: |
          df -h
          echo cmake --version
          echo "Installed Python versions:"
          ls -d /opt/python
          echo "python: $(which python), python3: $(which python3)"
          echo "Git version: $(git --version)"
          git config --global --add safe.directory $PWD
          git config fetch.parallel 10

      - name: Fetch sources
        run: |
          ./build_tools/fetch_sources.py --jobs 12

      - name: Install python deps
        run: |
          pip install -r requirements.txt
          pip freeze

      - name: Configure Projects
        env:
          amdgpu_families: ${{ env.AMDGPU_FAMILIES }}
          package_version: ADHOCBUILD
          extra_cmake_options: ${{ inputs.extra_cmake_options }}
          BUILD_DIR: build
        run: |
          python3 build_tools/github_actions/build_configure.py

      - name: Build therock-dist
        run: cmake --build build

      - name: Build therock-archives
        run: cmake --build build --target therock-archives

      - name: Report
        #if: ${{ !cancelled() }}
        run: |
          echo "Full SDK du:"
          echo "------------"
          du -h -d 1 build/dist/rocm
          echo "Artifact Archives:"
          echo "------------------"
          ls -lh build/artifacts/*.tar.xz
          echo "Artifacts:"
          echo "----------"
          du -h -d 1 build/artifacts

      - name: Configure AWS Credentials for non-forked repos
        if: ${{ always() && !github.event.pull_request.head.repo.fork }}
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::692859939525:role/therock-artifacts-external

      - name: Post Build Upload
        if: always()
        run: |
          python3 build_tools/github_actions/post_build_upload.py \
            --run-id ${{ github.run_id }} \
            --amdgpu-family ${{ env.AMDGPU_FAMILIES }} \
            --build-dir build \
            --upload

  therock-test-linux-multi-node:
    name: "Test multi-node"
    needs: [therock-build-linux]
    uses: ./.github/workflows/therock-test-packages-multi-node.yml
    with:
      amdgpu_families: ${{ inputs.amdgpu_families }}
      test_runs_on: vultr-linux-rocm
      artifact_run_id: ${{ github.run_id }}

  therock-test-linux-single-node:
    name: "Test single-node"
    needs: [therock-build-linux]
    uses: ./.github/workflows/therock-test-packages-single-node.yml
    with:
      amdgpu_families: ${{ inputs.amdgpu_families }}
      test_runs_on: linux-mi325-1gpu-ossci-rocm
      artifact_run_id: ${{ github.run_id }}
